service:
  name: severless-udagram
#app: your-app-name
#tenant: your-tenant-name

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack

provider:
  name: aws
  runtime: nodejs8.10

  # User can specify region in CLI
  region: ${opt:region, 'us-east-2'}
  # User can  specify stage in CLI
  stage: ${opt:stage, 'dev'}

  environment:
    # Either user specified stage or default stage
    GROUPS_TABLE: Groups-${self:provider.stage}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:PutItem
      Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.GROUPS_TABLE}

functions:
  GetGroups:
    handler: src/lambda/http/getGroups.handler
    events:
      - http:
          method: get
          path: groups
          cors: true

  CreateGroup:
    handler: src/lambda/http/createGroup.handler
    events:
      - http:
          method: post
          path: groups
          cors: true

resources:
  Resources:
    GroupsDynamoDBTable:
      # A DynamoDB Resource
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
        # Single ID field - string
          - AttributeName: id
            AttributeType: S
        KeySchema:
        # This will be the partition key
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        # Name the Table as the same as the environment variable
        TableName: ${self:provider.environment.GROUPS_TABLE}


